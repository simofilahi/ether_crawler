{"version":3,"sources":["components/Header/index.jsx","constants/index.js","components/Search/index.jsx","utils/index.js","components/TxDetails/index.jsx","components/TxCard/index.jsx","components/DatePicker/index.jsx","components/BalanceCard/index.jsx","containers/IndexPage/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Header","className","src","baseUrl","GenesisAddress","Search","txData","useContext","TxContext","SearchBtn","onClick","FetchTx","href","FromTxt","onChange","e","updateInputData","address","target","value","startBlock","inputData","type","placeholder","timeFormat","timeStamp","date","Date","diffMs","diffDays","Math","floor","diffHrs","diffMins","round","txHashUtil","str","slice","concat","convertWeiToEth","Web3","utils","fromWei","getBalanceByBlock","block","a","web3","process","eth","getBalance","TxDetails","props","TxDetailsRow","string","keyName","charAt","toUpperCase","Object","keys","TxDetailsData","map","key","TxCard","useState","showTxDetails","setShowDetails","setTxDetailsData","useEffect","currPage","RightArrowIcon","addPage","pages","length","setCurrPage","prevPage","xmlns","viewBox","fill","fillRule","d","clipRule","LeftArrowIcon","Pagination","page","index","TxHashCell","item","hash","TxBlockNumberCell","blockNumber","TxAgeCell","TxFromCell","from","TxToCell","to","TxValueCell","Rows","TableHead","scope","TableBody","Table","BackBtn","CustomDatePicker","direction","dateString","moment","utc","unix","setTimeStamp","BalanceCard","setAddress","BalanceBtn","FetchBalance","balance","toString","preventDefault","createContext","test","IndexPage","updateTxData","setBalance","url","axios","get","data","result","timestamp","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f0ca0a7.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <div className=\" bg-transparent flex h-24 font-bold text-2xl text-indigo-600\">\n      <img className=\"\" src={\"https://origintrail.io/images/ot-logo-new.svg\"} />\n    </div>\n  );\n};\n\nexport default Header;\n","export const baseUrl = \"https://api.etherscan.io/api\";\nexport const GenesisAddress = \"0x0000000000000000000000000000000000000000\";\n","import { TxContext } from \"../../containers/IndexPage\";\nimport React, { useContext } from \"react\";\nimport { GenesisAddress } from \"../../constants\";\n\nconst Search = () => {\n  const txData = useContext(TxContext);\n  const AddressInput = () => {\n    return (\n      <div className=\"flex px-1\">\n        <div className=\"flex border-2 rounded\">\n          <div className=\"flex items-center justify-center px-3 lg:px-4 border-r text-gray-500\">\n            Address\n          </div>\n          <input\n            onChange={(e) => {\n              txData.updateInputData({\n                address: e.target.value,\n                startBlock: txData.inputData.startBlock,\n              });\n            }}\n            value={\n              txData.inputData.address === GenesisAddress\n                ? \"\"\n                : txData.inputData.address\n            }\n            type=\"text\"\n            className=\"py-2 px-2 ms:w-24 md:w-48 lg:w-62 xl:w-80\"\n            placeholder={GenesisAddress}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const BlockInput = () => {\n    return (\n      <div className=\"px-1\">\n        <div className=\"flex border-2 rounded\">\n          <div className=\"flex items-center justify-center px-3 lg:px-4 border-r text-gray-500\">\n            Block\n          </div>\n          <input\n            onChange={(e) => {\n              txData.updateInputData({\n                startBlock: e.target.value,\n                address: txData.inputData.address,\n              });\n            }}\n            value={\n              txData.inputData.startBlock === 0\n                ? \"\"\n                : txData.inputData.startBlock\n            }\n            type=\"text\"\n            className=\"py-2 px-2 ms:w-24 md:w-48 lg:w-62 xl:w-80\"\n            placeholder=\" Default 0\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const SearchBtn = () => {\n    return (\n      <div className=\"flex justify-center items-center px-5 \">\n        <a\n          onClick={() => {\n            txData.FetchTx(1);\n          }}\n          href=\"#\"\n          className=\"ml-2 lg:ml-8 whitespace-nowrap\n      inline-flex items-center justify-center \n      sm:px-4 md:px-5 lg:px-6 h-10 border border-transparent rounded-md \n      shadow-sm text-base font-medium text-white bg-indigo-600 \n      hover:bg-indigo-700\"\n        >\n          Search\n        </a>\n      </div>\n    );\n  };\n\n  const FromTxt = () => {\n    return (\n      <div className=\"flex justify-center items-center ms:px-2 md:px-3 lg:px-5\">\n        From\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"flex bg-white sm:py-6 md:py-8 lg:py-10 items-center justify-center \">\n      {AddressInput()}\n      <FromTxt />\n      {BlockInput()}\n      <SearchBtn />\n    </div>\n  );\n};\n\nexport default Search;\n","import Web3 from \"web3\";\n\n// Format time in a readable way\nexport const timeFormat = (timeStamp) => {\n  const date = new Date(timeStamp * 1000);\n  const moment = new Date();\n  const diffMs = moment - date;\n\n  const diffDays = Math.floor(diffMs / 86400000);\n  const diffHrs = Math.floor((diffMs % 86400000) / 3600000);\n  const diffMins = Math.round(((diffMs % 86400000) % 3600000) / 60000);\n  if (diffDays > 0) return diffHrs + \" days ago\";\n  else if (diffHrs > 0) return diffMins + \" hrs ago\";\n  else if (diffMins > 0) return diffMins + \" min ago\";\n\n  return \"\";\n};\n\n// Slice the hashes of transaction\nexport const txHashUtil = (str) => {\n  const strFirstPart = str.slice(0, 20);\n\n  return strFirstPart.concat(\"...\");\n};\n\n// Capitalize the first character of a word\nexport const capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\n// Convert from wei unit to eth\nexport const convertWeiToEth = (value) => {\n  return Web3.utils.fromWei(value, \"ether\") + \" Ether\";\n};\n\n// Get balance of a address by block number\nexport const getBalanceByBlock = async (address, block) => {\n  const web3 = new Web3(process.env.REACT_APP_WEB3_PROVIDER);\n  return await web3.eth.getBalance(address, block);\n};\n","import { capitalizeFirstLetter } from \"../../utils\";\n\nconst TxDetails = (props) => {\n  const TxDetailsRow = (props) => {\n    return (\n      <div className=\"flex border-b-2 border-gray-100 py-4 px-2\">\n        <div className=\"w-1/3\">{capitalizeFirstLetter(props.keyName)}:</div>\n        <div className=\"max-w-xl whitespace-pre-line\">{props.value}</div>\n      </div>\n    );\n  };\n  return (\n    <div className=\" flex flex-col bg-white\">\n      {Object.keys(props.TxDetailsData).map((key) => {\n        return <TxDetailsRow keyName={key} value={props.TxDetailsData[key]} />;\n      })}\n    </div>\n  );\n};\n\nexport default TxDetails;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { convertWeiToEth, timeFormat, txHashUtil } from \"../../utils\";\nimport { TxContext } from \"../../containers/IndexPage\";\nimport TxDetails from \"../TxDetails\";\n\nconst TxCard = () => {\n  const txData = useContext(TxContext);\n  const [showTxDetails, setShowDetails] = useState(false);\n  const [TxDetailsData, setTxDetailsData] = useState({});\n\n  useEffect(() => {\n    txData.FetchTx(txData.currPage);\n  }, []);\n\n  const RightArrowIcon = () => {\n    return (\n      <a\n        onClick={() => {\n          txData.addPage([\n            ...txData.pages,\n            txData.pages[txData.pages.length - 1] + 1,\n          ]);\n          txData.setCurrPage((prevPage) => prevPage + 1);\n          txData.FetchTx(txData.currPage + 1);\n        }}\n        href=\"#\"\n        className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\n      >\n        <svg\n          className=\"h-5 w-5\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </a>\n    );\n  };\n\n  const LeftArrowIcon = () => {\n    return (\n      <a\n        onClick={() => {\n          if (txData.currPage > 1) {\n            txData.setCurrPage((prevPage) => prevPage - 1);\n            txData.FetchTx(txData.currPage - 1);\n          }\n        }}\n        href=\"#\"\n        className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\n      >\n        <svg\n          className=\"h-5 w-5\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </a>\n    );\n  };\n\n  const Pagination = () => {\n    return (\n      <div className=\"bg-white px-4 py-3 flex items-center justify-end border-t border-gray-200 sm:px-6\">\n        <div className=\"flex px-2\">\n          <nav\n            className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\"\n            aria-label=\"Pagination\"\n          >\n            <LeftArrowIcon />\n            {txData.pages.map((page, index) => {\n              return (\n                <a\n                  key={index}\n                  onClick={() => {\n                    txData.setCurrPage(page);\n                    txData.FetchTx(page);\n                  }}\n                  href=\"#\"\n                  aria-current=\"page\"\n                  className={` ${\n                    txData.currPage === page\n                      ? \"z-10 bg-indigo-50 border-indigo-500 text-indigo-600\"\n                      : \"bg-white border-gray-300 text-gray-500 hover:bg-gray-50\"\n                  }  relative inline-flex items-center px-4 py-2 border text-sm font-medium`}\n                >\n                  {page}\n                </a>\n              );\n            })}\n            <RightArrowIcon />\n          </nav>\n        </div>\n      </div>\n    );\n  };\n\n  const TxHashCell = (props) => {\n    return (\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"flex items-center\">\n          <div className=\"\">\n            <a\n              className=\"text-sm font-medium  cursor-pointer text-matisse\"\n              onClick={() => {\n                setTxDetailsData(props.item);\n                setShowDetails(true);\n              }}\n            >\n              {txHashUtil(props.item.hash)}\n            </a>\n          </div>\n        </div>\n      </td>\n    );\n  };\n\n  const TxBlockNumberCell = (props) => {\n    return (\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"text-sm text-gray-900\">{props.item.blockNumber}</div>\n      </td>\n    );\n  };\n\n  const TxAgeCell = (props) => {\n    return (\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"text-sm text-gray-900\">\n          {timeFormat(props.item.timeStamp)}\n        </div>\n      </td>\n    );\n  };\n\n  const TxFromCell = (props) => {\n    return (\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"text-sm text-gray-900\">\n          {txHashUtil(props.item.from)}\n        </div>\n      </td>\n    );\n  };\n\n  const TxToCell = (props) => {\n    return (\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"text-sm text-gray-900\">{txHashUtil(props.item.to)}</div>\n      </td>\n    );\n  };\n\n  const TxValueCell = (props) => {\n    return (\n      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        <div className=\"text-sm text-gray-900\">\n          {convertWeiToEth(props.item.value)}\n        </div>\n      </td>\n    );\n  };\n\n  const Rows = () => {\n    return (\n      <>\n        {txData &&\n          txData.txData.length > 0 &&\n          txData.txData.map((item, index) => {\n            return (\n              <tr key={index}>\n                <TxHashCell item={item} />\n                <TxBlockNumberCell item={item} />\n                <TxAgeCell item={item} />\n                <TxFromCell item={item} />\n                <TxToCell item={item} />\n                <TxValueCell item={item} />\n              </tr>\n            );\n          })}\n      </>\n    );\n  };\n\n  const TableHead = () => {\n    return (\n      <thead className=\"bg-gray-50\">\n        <tr>\n          <th\n            scope=\"col\"\n            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n          >\n            Tx hash\n          </th>\n          <th\n            scope=\"col\"\n            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n          >\n            Block\n          </th>\n          <th\n            scope=\"col\"\n            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n          >\n            Age\n          </th>\n\n          <th\n            scope=\"col\"\n            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n          >\n            From\n          </th>\n          <th\n            scope=\"col\"\n            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n          >\n            To\n          </th>\n          <th\n            scope=\"col\"\n            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n          >\n            Quantity\n          </th>\n        </tr>\n      </thead>\n    );\n  };\n\n  const TableBody = () => {\n    return (\n      <tbody className=\"bg-white divide-y divide-gray-200\">\n        <Rows />\n      </tbody>\n    );\n  };\n\n  const Table = () => {\n    return (\n      <table className=\"min-w-full divide-y divide-gray-200\">\n        <TableHead />\n        <TableBody />\n      </table>\n    );\n  };\n\n  const BackBtn = () => {\n    if (showTxDetails) {\n      return (\n        <div className=\"py-2\">\n          <a\n            onClick={() => {\n              setShowDetails(false);\n            }}\n            href=\"#\"\n            className=\" whitespace-nowrap inline-flex\n           items-center justify-center w-24 h-10 border: ;\n            border-transparent rounded-md shadow-sm \n            text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n          >\n            Back\n          </a>\n        </div>\n      );\n    } else return <></>;\n  };\n\n  return (\n    <div className=\" flex-col\">\n      <BackBtn />\n      <div\n        className=\"shadow overflow-hidden border-b \n      border-gray-200 w-full h-full  \"\n      >\n        {showTxDetails ? (\n          <TxDetails TxDetailsData={TxDetailsData} />\n        ) : (\n          <>\n            <Table />\n            <Pagination />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TxCard;\n","import \"antd/dist/antd.css\";\nimport { DatePicker, Space } from \"antd\";\nimport React from \"react\";\nimport moment from \"moment\";\n\nconst CustomDatePicker = (props) => {\n  return (\n    <Space direction=\"vertical\">\n      <DatePicker\n        className=\"h-11\"\n        onChange={async (value, dateString) => {\n          const date = moment(dateString).utc();\n          const timeStamp = date.unix();\n          props.setTimeStamp(timeStamp);\n        }}\n      />\n    </Space>\n  );\n};\n\nexport default CustomDatePicker;\n","import react, { useContext, useState } from \"react\";\nimport { convertWeiToEth } from \"../../utils\";\nimport CustomDatePicker from \"../DatePicker\";\nimport { TxContext } from \"../../containers/IndexPage\";\nimport { GenesisAddress } from \"../../constants\";\n\nconst BalanceCard = () => {\n  // Defaul address use to get the balance\n  const [address, setAddress] = useState();\n  const [timeStamp, setTimeStamp] = useState(0);\n  const txData = useContext(TxContext);\n\n  // Address input for getting balance\n  const AddressInput = () => {\n    return (\n      <div className=\"px-4 flex items-center justify-center\">\n        <div className=\"flex border-2 rounded\">\n          <div className=\"flex items-center justify-center px-3 lg:px-4 border-r text-gray-500\">\n            Address\n          </div>\n          <input\n            onChange={(e) => {\n              e.preventDefault();\n              setAddress(e.target.value);\n            }}\n            value={address}\n            type=\"text\"\n            className=\"py-2 h-10  px-2 ms:w-24 md:w-48 lg:w-62 xl:w-80\"\n            placeholder={GenesisAddress}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  // Get balance button\n  const BalanceBtn = () => {\n    return (\n      <div className=\"flex justify-center items-center px-4 \">\n        <a\n          onClick={() => {\n            txData.FetchBalance(address, timeStamp);\n          }}\n          href=\"#\"\n          className=\"ml-2 lg:ml-8 whitespace-nowrap\n        inline-flex items-center justify-center \n        sm:px-4 md:px-5 lg:px-6 h-10 border border-transparent rounded-md \n        shadow-sm text-base font-medium text-white bg-indigo-600 \n        hover:bg-indigo-700\"\n        >\n          Get Balance\n        </a>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bg-white w-full h-24 my-10 flex items-center flex-col\">\n      <div className=\" flex py-2  w-full  items-center\">\n        <div className=\"px-4 pb-1 \">\n          Balance: {convertWeiToEth(txData.balance.toString())}\n        </div>\n      </div>\n      <div className=\"flex self-start\">\n        {AddressInput()}\n        <div className=\"px-4 flex justify-center items-center\">\n          <CustomDatePicker setTimeStamp={setTimeStamp} />\n        </div>\n        <BalanceBtn />\n      </div>\n    </div>\n  );\n};\n\nexport default BalanceCard;\n","// Header of web app\nimport Header from \"../../components/Header\";\n\nimport Search from \"../../components/Search\";\n// Transaction card component\nimport TxCard from \"../../components/TxCard\";\n\n// State management functions\nimport React, { useState, createContext } from \"react\";\n\n// Base url of etherscan api\nimport { baseUrl } from \"../../constants\";\n\n// Package used for fetching data from web\nimport axios from \"axios\";\n\n// Balance Card component\nimport BalanceCard from \"../../components/BalanceCard\";\n\n// Get balance by block\nimport { getBalanceByBlock } from \"../../utils\";\n\n// Create context for this parent component\nexport const TxContext = createContext({ test: \"test\" });\n\nconst IndexPage = () => {\n  // Defaul address and block number\n  const [inputData, updateInputData] = useState({\n    address: \"0x0000000000000000000000000000000000000000\",\n    startBlock: 0,\n  });\n\n  // Transaction data\n  const [txData, updateTxData] = useState([]);\n\n  // Used for pagination to know which current page index\n  const [currPage, setCurrPage] = useState(1);\n\n  // Pagination pages\n  const [pages, addPage] = useState([1, 2, 3]);\n\n  // Balance of an address\n  const [balance, setBalance] = useState(0);\n\n  // Fetch transaction data of an address\n  const FetchTx = async (page) => {\n    try {\n      // Endpoint url used to get trasnaction data\n      const url = `${baseUrl}/?module=account&action=txlist&address=${inputData.address}&startblock=${inputData.startBlock}\\\n      &endblock=99999999&page=${page}&offset=18&sort=asc&apiKey=${process.env.REACT_APP_API_KEY}`;\n\n      // Fetch transaction data by pagination\n      const data = await axios.get(url);\n\n      // Update State\n      updateTxData(data.data.result);\n    } catch {}\n  };\n\n  // Fetch Balance of an address\n  const FetchBalance = async (address, timestamp) => {\n    try {\n      // Endpoint url used to to get number of block in specific time\n      const url = `${baseUrl}/?module=block&action=getblocknobytime&timestamp=${timestamp}&closest=before&apikey=${process.env.REACT_APP_API_KEY}`;\n\n      // Calling etherscan api to get number of block in specific time\n      const data = await axios.get(url);\n      const blockNumber = data.data.result;\n\n      // Get balance of an address by blockNumber\n      const balance = await getBalanceByBlock(address, blockNumber);\n\n      // Update the blance in state\n      setBalance(balance);\n    } catch {}\n  };\n\n  return (\n    <div className=\"flex h-full w-full  items-center bg-gray-100 justify-center\">\n      <div className=\"w-full h-24 bg-white flex-1 self-start\"></div>\n      <div className=\"w-980-px  flex flex-col absolute top-0 self-center\">\n        <TxContext.Provider\n          value={{\n            inputData,\n            updateInputData,\n            FetchTx,\n            txData,\n            currPage,\n            setCurrPage,\n            pages,\n            addPage,\n            balance,\n            setBalance,\n            FetchBalance,\n          }}\n        >\n          <Header />\n          <BalanceCard />\n          <Search />\n          <TxCard />\n        </TxContext.Provider>\n      </div>\n    </div>\n  );\n};\n\nexport default IndexPage;\n","import \"./index.css\";\nimport IndexPage from \"./containers/IndexPage\";\n\nfunction App() {\n  return (\n    <div className=\"flex h-full w-full items-center  justify-center \">\n      <IndexPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}